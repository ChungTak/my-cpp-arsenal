name: Build librockchip RK35XX

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      options: --user root
    env:
      OUTPUT_ROOT: outputs/librockchip_rk35xx
    steps:
      - name: 准备容器环境
        shell: bash
        run: |
          export DEBIAN_FRONTEND=noninteractive
          export TZ=Etc/UTC
          if command -v sudo >/dev/null 2>&1; then
            sudo ln -fs /usr/share/zoneinfo/"$TZ" /etc/localtime
            sudo apt-get update
            sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata
            sudo dpkg-reconfigure --frontend noninteractive tzdata
            sudo DEBIAN_FRONTEND=noninteractive apt-get install -y git build-essential unzip curl wget ninja-build pkg-config python3 python3-pip python3-venv linux-libc-dev-arm64-cross linux-libc-dev-armhf-cross
          else
            ln -fs /usr/share/zoneinfo/"$TZ" /etc/localtime
            apt-get update
            DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata
            dpkg-reconfigure --frontend noninteractive tzdata
            DEBIAN_FRONTEND=noninteractive apt-get install -y git build-essential unzip curl wget ninja-build pkg-config python3 python3-pip python3-venv linux-libc-dev-arm64-cross linux-libc-dev-armhf-cross
          fi

      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          repository: ChungTak/my-cpp-arsenal
          submodules: true

      - name: 升级 pip 并安装 Meson 与 CMake
        shell: bash
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install cmake==3.28
          python3 -m pip install meson

      - name: 安装交叉编译工具链
        shell: bash
        run: |
          set -euo pipefail
          TOOLCHAIN_ROOT=/opt/toolchains
          mkdir -p "$TOOLCHAIN_ROOT"
          cd "$TOOLCHAIN_ROOT"

          if [ ! -d gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu ]; then
            git clone --depth 1 https://github.com/rockchip-toybrick/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu.git
          fi

          if [ ! -d gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf ]; then
            git clone --depth 1 https://github.com/rockchip-toybrick/gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf.git
          fi

          AARCH64_TOOLCHAIN_BIN="$TOOLCHAIN_ROOT/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu/bin"
          ARMHF_TOOLCHAIN_BIN="$TOOLCHAIN_ROOT/gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf/bin"

          echo "$AARCH64_TOOLCHAIN_BIN" >> "$GITHUB_PATH"
          echo "$ARMHF_TOOLCHAIN_BIN" >> "$GITHUB_PATH"
          echo "AARCH64_LINUX_GNU_TOOLCHAIN=$TOOLCHAIN_ROOT/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu" >> "$GITHUB_ENV"
          echo "ARM_LINUX_GNUEABIHF_TOOLCHAIN=$TOOLCHAIN_ROOT/gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf" >> "$GITHUB_ENV"

          export PATH="$AARCH64_TOOLCHAIN_BIN:$ARMHF_TOOLCHAIN_BIN:$PATH"

          aarch64-linux-gnu-gcc --version
          arm-linux-gnueabihf-gcc --version

      - name: 准备 librockchip 构建脚本
        shell: bash
        run: chmod +x scripts/librockchip/build_rk35xx.sh

      - name: 构建 librockchip RK35XX (aarch64-linux-gnu-debug)
        shell: bash
        run: ./scripts/librockchip/build_rk35xx.sh aarch64-linux-gnu-debug

      - name: 构建 librockchip RK35XX (aarch64-linux-gnu)
        shell: bash
        run: ./scripts/librockchip/build_rk35xx.sh aarch64-linux-gnu

      - name: 构建 librockchip RK35XX (arm-linux-gnueabihf)
        shell: bash
        run: ./scripts/librockchip/build_rk35xx.sh arm-linux-gnueabihf

      - name: Setup Android NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
          local-cache: true
          add-to-path: true

      - name: 导出 ANDROID_NDK_HOME
        if: steps.setup-ndk.outputs.ndk-path != ''
        shell: bash
        run: echo "ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> "$GITHUB_ENV"

      - name: 构建 librockchip RK35XX (aarch64-linux-android)
        shell: bash
        run: ./scripts/librockchip/build_rk35xx.sh aarch64-linux-android

      - name: 构建 librockchip RK35XX (arm-linux-android)
        shell: bash
        run: ./scripts/librockchip/build_rk35xx.sh arm-linux-android

      - name: 压缩构建产物
        shell: bash
        run: |
          set -euo pipefail
          cd "$OUTPUT_ROOT"
          for dir in aarch64-linux-gnu-debug aarch64-linux-gnu arm-linux-gnueabihf aarch64-linux-android arm-linux-android; do
            if [ ! -d "$dir" ]; then
              echo "::error::缺少目录 $OUTPUT_ROOT/$dir" >&2
              exit 1
            fi
            tar -czf "$dir.tar.gz" "$dir"
          done

      - name: 解析版本号
        id: version
        shell: bash
        run: |
          set -euo pipefail
          release_file="$OUTPUT_ROOT/release.txt"
          if [ ! -f "$release_file" ]; then
            echo "::error::未找到 release 文件 $release_file" >&2
            exit 1
          fi
          version_line=$(grep -E '^rknpu2=' "$release_file" | head -n1 || true)
          if [ -z "$version_line" ]; then
            echo "::error::无法在 $release_file 中找到 rknpu2= 行" >&2
            exit 1
          fi
          version=${version_line#rknpu2=}
          version=$(echo "$version" | tr -d ' \r\n\t')
          if [ -z "$version" ]; then
            echo "::error::解析到的 rknpu2 版本为空" >&2
            exit 1
          fi
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "release_tag=librockchip-$version" >> "$GITHUB_OUTPUT"

      - name: 发布 Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.version.outputs.release_tag }}
          name: librockchip-${{ steps.version.outputs.version }}
          bodyFile: outputs/librockchip_rk35xx/release.txt
          artifacts: |
            outputs/librockchip_rk35xx/aarch64-linux-gnu-debug.tar.gz
            outputs/librockchip_rk35xx/aarch64-linux-gnu.tar.gz
            outputs/librockchip_rk35xx/arm-linux-gnueabihf.tar.gz
            outputs/librockchip_rk35xx/aarch64-linux-android.tar.gz
            outputs/librockchip_rk35xx/arm-linux-android.tar.gz
          allowUpdates: true
          replacesArtifacts: true
