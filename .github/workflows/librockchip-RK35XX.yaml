name: Build librockchip RK35XX

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (格式: YYYYMMDD，留空则使用当前日期)'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-20.04
    env:
      OUTPUT_ROOT: outputs/librockchip_rk35xx
    steps:
      - name: 确定版本号
        id: version
        shell: bash
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            version=$(date +%Y%m%d)
          else
            version="${{ github.event.inputs.version }}"
          fi
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "release_tag=librockchip-$version" >> "$GITHUB_OUTPUT"

      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          repository: ChungTak/my-cpp-arsenal
          submodules: true

      - name: 设置 Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 安装系统构建依赖
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential unzip curl wget ninja-build pkg-config

      - name: 升级 pip 并安装 Meson 与 CMake
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install meson cmake

      - name: Setup Android NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
          local-cache: true
          add-to-path: true

      - name: 导出 ANDROID_NDK_HOME
        if: steps.setup-ndk.outputs.ndk-path != ''
        shell: bash
        run: echo "ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> "$GITHUB_ENV"

      - name: 安装交叉编译工具链
        shell: bash
        run: |
          chmod +x install_toolchain.sh
          ./install_toolchain.sh

      - name: 构建 librockchip RK35XX
        shell: bash
        run: |
          chmod +x scripts/librockchip/build_rk35xx.sh
          ./scripts/librockchip/build_rk35xx.sh

      - name: 压缩构建产物
        shell: bash
        run: |
          set -euo pipefail
          cd "$OUTPUT_ROOT"
          for dir in aarch64-linux-gnu-debug aarch64-linux-gnu arm-linux-gnueabihf aarch64-linux-android arm-linux-android; do
            if [ ! -d "$dir" ]; then
              echo "::error::缺少目录 $OUTPUT_ROOT/$dir" >&2
              exit 1
            fi
            tar -czf "$dir.tar.gz" "$dir"
          done

      - name: 发布 Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.version.outputs.release_tag }}
          name: librockchip-${{ steps.version.outputs.version }}
          bodyFile: outputs/librockchip_rk35xx/release.txt
          artifacts: |
            outputs/librockchip_rk35xx/aarch64-linux-gnu-debug.tar.gz
            outputs/librockchip_rk35xx/aarch64-linux-gnu.tar.gz
            outputs/librockchip_rk35xx/arm-linux-gnueabihf.tar.gz
            outputs/librockchip_rk35xx/aarch64-linux-android.tar.gz
            outputs/librockchip_rk35xx/arm-linux-android.tar.gz
          allowUpdates: true
          replacesArtifacts: true
